#! @PERL@

#
# externals.in
#
# Copyright (C) 2007, 2008 Francesco Salvestrini
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
#

use strict;
use warnings;

my $program = "undefined-symbols";

my %symbols = {};

sub define_symbol ($)
{
    my $name = shift;

    defined($name) || die "Missing name for defined symbol";

    print "Defining symbol $name\n";
    $symbols{$name} = 1;
}

sub undefine_symbol ($)
{
    my $name = shift;

    defined($name) || die "Missing name for undefined symbol";

    print "Undefining symbol $name\n";
    $symbols{$name} = 0;
}

#
# Main
#

while (<STDIN>) {
    s/[ \t]+/ /;
    s/^[ ]*//;
    s/[ ]*$//;
    
    if ($_ =~ m/^[a-zA-Z0-9_\-\.]+:$/) {
	# Skip library declaration
    } elsif ($_ =~ m/^([0-9a-fA-F]+) (.) (.+)$/) {
	my $address = $1;
	my $type    = $2;
	my $name    = $3;

	if ($type eq "T") {
	    define_symbol($name);
	}
    } elsif ($_ =~ m/^U (.+)$/) {
	my $name = $1;

	undefine_symbol($name);
    } elsif ($_ =~ m/^$/) {
	# Skip empty lines
    } else {
	print STDERR "$program: Unhandled input line \`" . $_ . "'\n";
	exit 1;
    }
}

for my $symbol (keys(%symbols)) {
    print "Symbol = $symbol\n";
    if ($symbols{$symbol} == 0) {
	print STDOUT "$program: undefined $symbol\n";
    } else {
	print STDOUT "$program: defined   $symbol\n";
    }
}

exit 0;
