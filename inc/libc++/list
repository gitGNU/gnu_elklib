#if 0
//
// Copyright (C) 2007, 2008 Francesco Salvestrini
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 2 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License along
// with this program; if not, write to the Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
//

namespace ktl
{
	template<typename T> class list {
	public:
                typedef T                  value_type;
                typedef value_type *       pointer;
                typedef const value_type * const_pointer;
                typedef value_type &       reference;
                typedef const value_type & const_reference;
                typedef pointer            iterator;
                typedef const_pointer      const_iterator;

		list(void);
#if 0
		list(size_type n);
                list(size_type n, const T & v);
                list(const list<T> & v);
                list(const_iterator i1,
                       const_iterator i2);
#endif
		~list(void);

	private:
	};

	template<typename T> list<T>::list(void)
	{
	}

	template<typename T> list<T>::~list(void)
	{
	}
}
#endif
